{"version":3,"sources":["logo512.png","Autocomplete.js","NewItemCard.js","Seach.js","ItemCard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Autocomplete","props","useState","cursor","setCursor","hasFocus","setHasFocus","hasDone","setHasDone","searchRef","useRef","suggestionRef","useRect","rect","console","log","current","style","left","top","height","width","type","autoComplete","name","placeholder","value","ref","className","onKeyPress","e","key","preventDefault","onKeyUp","persist","suggestions","length","onSelect","onChange","onFocus","onBlur","map","suggestion","i","onClick","NewItemCard","word","handleWord","handleLoaded","baseUrl","window","$baseUrl","data","setData","q","setQ","addToast","useToasts","handleQ","useEffect","a","axios","result","split","r","filter","fetchData","flipOnClick","flipDirection","backgroundColor","event","target","toLowerCase","aria-label","then","response","appearance","Search","title","handleTitle","handleFilter","src","icon","alt","Set","f","data-value","dataset","clear","text","trim","replace","ItemCard","flippy","item","setLoaded","confirm","delete","xmlns","class","viewBox","stroke-width","fill","stroke-linecap","stroke-linejoin","stroke","d","x1","y1","x2","y2","toggle","translations","slice","to","from","App","setTitle","setFilter","setWord","loaded","config","headers","reverse","element","includes","some","index","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","process","ReactDOM","render","StrictMode","autoDismiss","autoDismissTimeout","placement","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0a019c28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo512.8e1309ea.png\";","import React, { useState, useRef } from \"react\";\nimport Portal from \"@reach/portal\";\nimport { useRect } from \"@reach/rect\";\n\nexport default function Autocomplete(props) {\n  const [cursor, setCursor] = useState(0);\n  const [hasFocus, setHasFocus] = useState(false);\n  const [hasDone, setHasDone] = useState(false);\n  const searchRef = useRef();\n  const suggestionRef = useRef();\n\n  useRect(searchRef, true, (rect) => {\n    console.log(hasFocus)\n    if (suggestionRef.current && rect) {\n      suggestionRef.current.style.left = rect.left + \"px\";\n      suggestionRef.current.style.top = rect.top + rect.height + \"px\";\n      suggestionRef.current.style.width = rect.width + \"px\";\n    }\n  });\n\n  const handleKeyPress = (e) => {\n    e.preventDefault();\n    e.persist();\n\n    setHasDone(false);\n\n    if (e.key === \"ArrowUp\" && cursor - 1 >= 0) {\n      setCursor(cursor - 1);\n    }\n\n    if (e.key === \"ArrowDown\" && cursor + 1 < props.suggestions.length) {\n      setCursor(cursor + 1);\n    }\n\n    if (e.key === \"Enter\") {\n      props.onSelect(props.suggestions[cursor]);\n      setHasFocus(false);\n      setHasDone(true);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        autoComplete=\"off\"\n        name={props.name}\n        placeholder={props.placeholder}\n        value={props.value}\n        ref={searchRef}\n        className={props.className}\n        onKeyPress={(e) => e.key === \"Enter\" && e.preventDefault()}\n        onKeyUp={handleKeyPress}\n        onChange={(e) => {\n          props.onChange(e);\n        }}\n        onFocus={() => setHasFocus(true)}\n        onBlur={() => setHasFocus(false)}\n      />\n      <Portal>\n        <div ref={suggestionRef} className=\"shadow absolute text-left z-10 text-black\">\n          { !hasDone && props.suggestions.length > 0 && (\n            <div className=\"shadow border border-white bg-white text-gray-900 absolute text-left z-10 w-full h-64 overflow-auto rounded-lg\">\n              {!hasDone &&\n                props.suggestions.length > 0 &&\n                props.suggestions.map((suggestion, i) => {\n                  return (\n                    <div\n                      onClick={() => {\n                        props.onSelect(suggestion);\n                        setHasFocus(false);\n                        setHasDone(true);\n                      }}\n                      className={`${\n                        cursor === i ? \"bg-teal-100\" : \"\"\n                      } p-2 cursor-pointer`}\n                    >\n                      {suggestion}\n                    </div>\n                  );\n                })}\n            </div>\n          )}\n        </div>\n      </Portal>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Flippy, { FrontSide } from \"react-flippy\";\nimport Autocomplete from \"./Autocomplete\";\nimport axios from \"axios\";\nimport { useToasts } from \"react-toast-notifications\";\nfunction NewItemCard({ word, handleWord, handleLoaded }) {\n  const baseUrl = window.$baseUrl;\n  const [data, setData] = useState([]);\n  const [q, setQ] = useState(\"\");\n  const { addToast } = useToasts();\n\n  const handleQ = (word) => {\n    setQ(word);\n    handleWord(word);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        `https://www.wordreference.com/2012/autocomplete/autocomplete.aspx?dict=iten&query=${q}`\n      );\n\n      setData(\n        result.data\n          .split(\"\\n\")\n          .map((r) => r.split(\"\\t\")[0])\n          .filter((e) => e.length > 0)\n      );\n    };\n\n    fetchData();\n  }, [q]);\n\n  return (\n    <>\n      <Flippy flipOnClick={false} flipDirection=\"horizontal\">\n        <FrontSide\n          className=\"flex items-center justify-center  w-full h-full p-4 rounded-lg shadow uppercase text-2xl\"\n\n          style={{ height: \"300px\" , backgroundColor: \"#1a202c\" }}\n        >\n          <form className=\"w-full max-w-sm\">\n            <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\" >\n              <input\n                className=\"hidden appearance-none bg-transparent border-none w-full text-white mr-3 py-1 px-2 leading-tight focus:outline-none\"\n                type=\"text\"\n                onChange={(event) =>\n                  handleWord(event.target.value.toLowerCase())\n                }\n                value={word}\n              />\n\n              <Autocomplete\n                aria-label=\"Word\"\n                suggestions={data}\n                value={q}\n                placeholder=\"Cerca\"\n                className=\"w-full h-full border text-black appearance-none bg-transparent border-none w-full text-white mr-3 py-1 px-2 leading-tight focus:outline-none\"\n                onChange={(e) => handleQ(e.target.value)}\n                onSelect={(e) => handleQ(e)}\n              ></Autocomplete>\n\n              <button\n                onClick={() =>\n                  axios(baseUrl + \"/add/\" + word).then((response) => {\n                    addToast(word + \" Saved Successfully\", {\n                      appearance: \"success\",\n                    });\n                    handleLoaded(response);\n                    handleQ(\"\");\n                  })\n                }\n                className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\"\n                type=\"button\"\n              >\n                Add\n              </button>\n              <button\n                className=\"flex-shrink-0 border-transparent border-4 text-teal-500 hover:text-teal-800 text-sm py-1 px-2 rounded\"\n                type=\"button\"\n                onClick={() => handleQ(\"\")}\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </FrontSide>\n      </Flippy>\n    </>\n  );\n}\nexport default NewItemCard;\n","import React from \"react\";\nimport icon from \"./logo512.png\";\nfunction Search({ title, handleTitle, filter, handleFilter }) {\n  return (\n    <>\n      <div className=\"flex flex-no-wrap h-10 px-8 z-50 relative\">\n        <img src={icon} className=\"h-full inline-block mr-2\" alt=\"Logo\" />\n        <input\n          placeholder=\"Search...\"\n          className=\"w-full   h-full py-2 px-4 shadow bg-gray-900  rounded-lg\"\n          onChange={(event) =>\n            handleTitle(event.target.value.toLowerCase().split(\"&\"))\n          }\n          value={title}\n          onKeyPress={(event) => {\n            if (event.key === \"Enter\") {\n              handleFilter([\n                ...new Set([...filter, event.target.value.toLowerCase()]),\n              ]);\n              handleTitle([\"\"]);\n            }\n          }}\n        />\n        {/* <div className=\"w-32 flex justify-center items-center\">casa | casa</div> */}\n      </div>\n      <div className=\"flex px-8 flex-wrap space-x-2\">\n        {filter.map((f) => {\n          return (\n            <span\n              key={f}\n              className=\"rounded-full py-2 px-4 my-2 bg-gray-300 hover:shadow-md hover:translate-x-1\"\n            >\n              {f}{\" \"}\n              <span\n                className=\"ml-1 border cursor-pointer\"\n                data-value={f}\n                onClick={(event) =>\n                  handleFilter(\n                    filter.filter((e) => e !== event.target.dataset.value)\n                  )\n                }\n              >\n                ✘\n              </span>\n            </span>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\nimport axios from \"axios\";\n\nfunction clear(text) {\n  return text.trim().replace(/⇒/gi, \"\");\n}\nfunction ItemCard({ item, setLoaded, className }) {\n  //const [flippy, setFlippy] = useState();\n  const baseUrl = window.$baseUrl;\n  let flippy;\n  return (\n    <div className={className}>\n      <Flippy\n        flipOnClick={false}\n        ref={(r) => (flippy = r)}\n        flipDirection=\"horizontal\"\n      >\n        <FrontSide\n          className=\"bg-teal-500 flex items-center justify-center content-around w-full h-full p-4 rounded-lg shadow  capitalize text-3xl\"\n          style={{ height: \"300px\", backgroundColor: \"#319795\" }}\n        >\n          <div className=\"absolute right-0 top-0 px-4 py-2 \">\n            <span\n              className=\"text-sm cursor-pointer text-gray-400 upper\"\n              onClick={() => {\n                if (\n                  window.confirm(\"Are you sure you wish to delete this item?\")\n                )\n                  axios\n                    .delete(baseUrl + \"/remove/\" + item.word)\n                    .then((response) => setLoaded(response));\n              }}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                class=\"icon icon-tabler icon-tabler-trash stroke-current\"\n                width=\"22\"\n                height=\"22\"\n                viewBox=\"0 0 24 24\"\n                stroke-width=\"2\"\n                fill=\"none\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n              >\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\n                <line x1=\"4\" y1=\"7\" x2=\"20\" y2=\"7\" />\n                <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />\n                <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />\n                <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n              </svg>\n            </span>\n          </div>\n          <span\n            className=\"cursor-pointer text-gray-400\"\n            onClick={() => flippy.toggle()}\n          >\n            {\" \"}\n            {item.word}\n          </span>\n          {/* <div>\n            <span\n              className=\"text-white cursor-pointer\"\n              onClick={() => flippy.toggle()}\n            >\n\n            </span>\n          </div> */}\n        </FrontSide>\n        <BackSide\n          className=\"bg-teal-500  border border-teal-500 w-full h-full p-4 rounded-lg shadow\"\n          style={{ backgroundColor: \"#319795\" }}\n        >\n          <div className=\"h-full w-full p-2 pb-4\">\n          <div className=\"absolute left-0 top-0 px-4 py-2 \">\n            <span\n              className=\"text-sm cursor-pointer text-gray-400 upper\">\n            <svg\n              onClick={() => flippy.toggle()}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\" cursor-pointer icon icon-tabler icon-tabler-arrow-back-up\"\n              width=\"22\"\n              height=\"22\"\n              viewBox=\"0 0 24 24\"\n              stroke-width=\"1.5\"\n              stroke=\"#ffffff\"\n              fill=\"none\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            >\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\n              <path d=\"M9 13l-4 -4l4 -4m-4 4h11a4 4 0 0 1 0 8h-1\" />\n            </svg>\n            </span>\n            </div>\n            <div class=\"h-full mt-2 overflow-y-scroll\">\n              {item.translations.slice(0, 2).map((item, key) => {\n                return (\n                  <>\n                    <p className=\"font-bold my-1 mt-2 text-teal-300\">\n                      {item.title}\n                    </p>\n                    {item.translations[key] &&\n                      item.translations.map((item) => {\n                        return (\n                          <>\n                            <p key={`3${item.to}${key}`}>\n                              {clear(item.from)} ⮕ {clear(item.to)}\n                            </p>\n                          </>\n                        );\n                      })}\n                  </>\n                );\n              })}\n            </div>\n          </div>\n        </BackSide>\n      </Flippy>\n    </div>\n  );\n}\nexport default ItemCard;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./tailwind.generated.css\";\nimport NewItemCard from \"./NewItemCard\";\nimport Search from \"./Seach\";\nimport ItemCard from \"./ItemCard\";\n\n//\nfunction App() {\n  const [data, setData] = useState([]);\n  const [title, setTitle] = useState([\"\"]);\n  const [filter, setFilter] = useState([]);\n  const [word, setWord] = useState([]);\n  const [loaded, setLoaded] = useState(\"\");\n  const baseUrl = window.$baseUrl;\n  //const baseUrl = \"http://localhost:3000\"\n  useEffect(() => {\n    var config = {\n      headers: { \"Access-Control-Allow-Origin\": \"*\" },\n    };\n\n    const fetchData = async () => {\n      const result = await axios(baseUrl + \"/mywords\", config);\n\n      setData(result.data.reverse());\n      setWord(\"\");\n    };\n\n    fetchData();\n  }, [loaded, baseUrl]);\n\n  function clear(item) {\n    var set = [...title, ...filter];\n\n    var result = set.map((element) => {\n      return item.word.toLowerCase().includes(element);\n    });\n\n    return result.some((item) => item);\n  }\n\n  return (\n    <div className=\"py-6\">\n      <Search\n        title={title}\n        filter={filter}\n        handleFilter={setFilter}\n        handleTitle={setTitle}\n      ></Search>\n      <div className=\"flex flex-wrap p-4\">\n        <div className=\"xl:w-1/3 lg:w-1/3 md:w-1/2 w-full p-4 relative\" key=\"0\">\n          <NewItemCard\n            word={word}\n            handleLoaded={setLoaded}\n            handleWord={setWord}\n          ></NewItemCard>\n        </div>\n        {data\n          .filter((item) => clear(item))\n          .map((item, index) => {\n            return (\n              <ItemCard\n                className=\"xl:w-1/3 lg:w-1/3 md:w-1/2 w-full p-4 relative\"\n                item={item}\n                key={`${item.word}${index}`}\n                setLoaded={setLoaded}\n              ></ItemCard>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ToastProvider } from \"react-toast-notifications\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nwindow.$baseUrl = process.env.REACT_APP_BASE_URL ?? \"http://localhost:3000\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToastProvider\n      autoDismiss\n      autoDismissTimeout={2000}\n      placement=\"bottom-center\"\n    >\n      <App />\n    </ToastProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}