{"version":3,"sources":["logo512.png","Autocomplete.js","NewItemCard.js","Seach.js","ItemCard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Autocomplete","props","useState","cursor","setCursor","hasFocus","setHasFocus","hasDone","setHasDone","searchRef","useRef","suggestionRef","useRect","rect","console","log","current","style","left","top","height","width","type","autoComplete","name","placeholder","value","ref","className","onKeyPress","e","key","preventDefault","onKeyUp","persist","suggestions","length","onSelect","onChange","onFocus","onBlur","map","suggestion","i","onClick","NewItemCard","word","handleWord","handleLoaded","baseUrl","window","$baseUrl","data","setData","q","setQ","handleQ","useEffect","a","axios","result","split","r","filter","fetchData","flipOnClick","flipDirection","event","target","toLowerCase","aria-label","then","response","Search","title","handleTitle","handleFilter","src","icon","alt","Set","f","data-value","dataset","clear","text","trim","replace","ItemCard","flippy","item","setLoaded","delete","toggle","translations","to","from","App","setTitle","setFilter","setWord","loaded","config","headers","reverse","element","includes","some","index","Boolean","location","hostname","match","process","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.905d02c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo512.8e1309ea.png\";","import React, { useState, useRef } from \"react\";\nimport Portal from \"@reach/portal\";\nimport { useRect } from \"@reach/rect\";\n\nexport default function Autocomplete(props) {\n  const [cursor, setCursor] = useState(0);\n  const [hasFocus, setHasFocus] = useState(false);\n  const [hasDone, setHasDone] = useState(false);\n  const searchRef = useRef();\n  const suggestionRef = useRef();\n\n  useRect(searchRef, true, (rect) => {\n    console.log(hasFocus)\n    if (suggestionRef.current && rect) {\n      suggestionRef.current.style.left = rect.left + \"px\";\n      suggestionRef.current.style.top = rect.top + rect.height + \"px\";\n      suggestionRef.current.style.width = rect.width + \"px\";\n    }\n  });\n\n  const handleKeyPress = (e) => {\n    e.preventDefault();\n    e.persist();\n\n    setHasDone(false);\n\n    if (e.key === \"ArrowUp\" && cursor - 1 >= 0) {\n      setCursor(cursor - 1);\n    }\n\n    if (e.key === \"ArrowDown\" && cursor + 1 < props.suggestions.length) {\n      setCursor(cursor + 1);\n    }\n\n    if (e.key === \"Enter\") {\n      props.onSelect(props.suggestions[cursor]);\n      setHasFocus(false);\n      setHasDone(true);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        autoComplete=\"off\"\n        name={props.name}\n        placeholder={props.placeholder}\n        value={props.value}\n        ref={searchRef}\n        className={props.className}\n        onKeyPress={(e) => e.key === \"Enter\" && e.preventDefault()}\n        onKeyUp={handleKeyPress}\n        onChange={(e) => {\n          props.onChange(e);\n        }}\n        onFocus={() => setHasFocus(true)}\n        onBlur={() => setHasFocus(false)}\n      />\n      <Portal>\n        <div ref={suggestionRef} className=\"shadow absolute text-left z-10 text-black\">\n          { !hasDone && props.suggestions.length > 0 && (\n            <div className=\"shadow border border-white bg-white text-gray-900 absolute text-left z-10 w-full h-64 overflow-auto rounded-lg\">\n              {!hasDone &&\n                props.suggestions.length > 0 &&\n                props.suggestions.map((suggestion, i) => {\n                  return (\n                    <div\n                      onClick={() => {\n                        props.onSelect(suggestion);\n                        setHasFocus(false);\n                        setHasDone(true);\n                      }}\n                      className={`${\n                        cursor === i ? \"bg-teal-100\" : \"\"\n                      } p-2 cursor-pointer`}\n                    >\n                      {suggestion}\n                    </div>\n                  );\n                })}\n            </div>\n          )}\n        </div>\n      </Portal>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\nimport Autocomplete from \"./Autocomplete\";\nimport axios from \"axios\";\n\nfunction NewItemCard({ word, handleWord, handleLoaded }) {\n  const baseUrl = window.$baseUrl;\n  const [data, setData] = useState([]);\n  const [q, setQ] = useState(\"\");\n\n  const handleQ = (word) => {\n    setQ(word);\n    handleWord(word);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        `https://www.wordreference.com/2012/autocomplete/autocomplete.aspx?dict=iten&query=${q}`\n      );\n\n      setData(\n        result.data\n          .split(\"\\n\")\n          .map((r) => r.split(\"\\t\")[0])\n          .filter((e) => e.length > 0)\n      );\n    };\n\n    fetchData();\n  }, [q]);\n\n  return (\n    <>\n      <Flippy flipOnClick={false} flipDirection=\"horizontal\">\n        <FrontSide\n          className=\"flex items-center justify-center border w-full h-full p-4 rounded-lg shadow uppercase text-2xl\"\n          style={{ height: \"300px\" }}\n        >\n          <form className=\"w-full max-w-sm\">\n            <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\n              <input\n                className=\"hidden appearance-none bg-transparent border-none w-full text-white mr-3 py-1 px-2 leading-tight focus:outline-none\"\n                type=\"text\"\n                onChange={(event) =>\n                  handleWord(event.target.value.toLowerCase())\n                }\n                value={word}\n              />\n\n              <Autocomplete\n                aria-label=\"Word\"\n                suggestions={data}\n                value={q}\n                placeholder=\"Cerca\"\n                className=\"w-full h-full border text-black appearance-none bg-transparent border-none w-full text-white mr-3 py-1 px-2 leading-tight focus:outline-none\"\n                onChange={(e) => handleQ(e.target.value)}\n                onSelect={(e) => handleQ(e)}\n              ></Autocomplete>\n\n              <button\n                onClick={() =>\n                  axios(baseUrl + \"/add/\" + word).then((response) =>\n                    handleLoaded(response)\n                  )\n                }\n                className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\"\n                type=\"button\"\n              >\n                Add\n              </button>\n              <button\n                className=\"flex-shrink-0 border-transparent border-4 text-teal-500 hover:text-teal-800 text-sm py-1 px-2 rounded\"\n                type=\"button\"\n                onClick={() => handleWord(\"\")}\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </FrontSide>\n        <BackSide className=\"lg:w-1/4 md:w-1/3 sm:w-1/2 w-full p-4 relative\">\n          <p>GO BACK</p>\n        </BackSide>\n      </Flippy>\n    </>\n  );\n}\nexport default NewItemCard;\n","import React from \"react\";\nimport icon from \"./logo512.png\"\nfunction Search({title,handleTitle,filter,handleFilter}){\n  return(\n<>\n\n    <div className=\"flex flex-no-wrap h-10 px-8\">\n\n        <img src={icon} className=\"h-full inline-block mr-2\" alt=\"Logo\" />\n\n\n    <input\n      placeholder=\"Search...\"\n      className=\"w-full   h-full border py-2 px-4 rounded-lg shadow bg-transparent\"\n      onChange={(event) =>\n        handleTitle(event.target.value.toLowerCase().split(\"&\"))\n      }\n      value={title}\n      onKeyPress={(event) => {\n        if (event.key === \"Enter\") {\n          handleFilter([\n            ...new Set([...filter, event.target.value.toLowerCase()]),\n          ]);\n          handleTitle([\"\"]);\n        }\n      }}\n    />\n      <div className=\"w-32 flex justify-center items-center\">\n    casa | casa\n  </div>\n  </div>\n  <div className=\"flex px-8 flex-wrap space-x-2\">\n    {filter.map((f) => {\n      return (\n        <span\n          key={f}\n          className=\"rounded-full py-2 px-4 my-2 bg-gray-300 hover:shadow-md hover:translate-x-1\"\n        >\n          {f}{\" \"}\n          <span\n            className=\"ml-1 border cursor-pointer\"\n            data-value={f}\n            onClick={(event) =>\n              handleFilter(\n                filter.filter((e) => e !== event.target.dataset.value)\n              )\n            }\n          >\n            ✘\n          </span>\n        </span>\n      );\n    })}\n\n  </div>\n\n</>\n  )\n}\n\nexport default Search;","import React from \"react\";\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\nimport axios from \"axios\";\n\n\nfunction clear(text){\n  return text.trim().replace(/⇒/gi, \"\");\n}\nfunction ItemCard({ item, setLoaded,className }) {\n  //const [flippy, setFlippy] = useState();\n  const baseUrl = window.$baseUrl;\n  let flippy;\n  return (\n    <div  className={className}>\n    <Flippy\n\n      flipOnClick={false}\n      ref={(r) => (flippy = r)}\n      flipDirection=\"horizontal\"\n    >\n      <FrontSide\n        className=\"flex items-center justify-center border w-full h-full p-4 rounded-lg shadow uppercase text-2xl\"\n        style={{ height: \"300px\" }}\n      >\n        <div className=\"absolute left-0 right-0 top-0 px-4 text-right\">\n          <span\n            className=\"text-sm cursor-pointer text-red-400\"\n            onClick={() =>\n              axios\n                .delete(baseUrl + \"/remove/\" + item.word)\n                .then((response) => setLoaded(response))\n            }\n          >\n            Delete\n          </span>\n        </div>\n        <span className=\"cursor-pointer\"   onClick={() => flippy.toggle()}> {item.word}</span>\n        <div className=\"absolute bottom-0 pb-2 hover:underline\">\n          <span\n            className=\"text-teal-500 text-sm cursor-pointer\"\n            onClick={() => flippy.toggle()}\n          >\n            Reveal\n          </span>\n        </div>\n      </FrontSide>\n      <BackSide className=\"border border-teal-500 w-full h-full p-4 rounded-lg shadow\">\n        <p className=\"font-bold my-1 text-teal-300 \">\n          {item.translations[0] && item.translations[0].title}\n        </p>\n        <div className=\"flex flex-wrap space-x-2\">\n          {item.translations[0] &&\n            item.translations[0].translations.map((item, key) => {\n              return (\n                <>\n                  <p key={`1${item.to}${key}`}>{clear(item.to)}</p>\n                  <p key={`2${item.to}${key}`}>●</p>\n                </>\n              );\n            })}\n        </div>\n        <p className=\"font-bold my-1 mt-2 text-teal-300\">\n          {item.translations[1] && item.translations[1].title}\n        </p>\n        {item.translations[1] &&\n          item.translations[1].translations.map((item,key) => {\n            return (\n              <p key={`3${item.to}${key}`}>\n                {clear(item.from)} ⮕ {clear(item.to)}\n              </p>\n            );\n          })}\n        <div className=\"absolute left-0 bottom-0 pb-2 w-full flex justify-center\">\n          <span\n            className=\"text-teal-500 text-sm cursor-pointer uppercase text-center\"\n            onClick={() => flippy.toggle()}\n          >\n            UnReveal\n          </span>\n        </div>\n      </BackSide>\n    </Flippy>\n    </div>\n  );\n}\nexport default ItemCard;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./tailwind.generated.css\";\nimport NewItemCard from \"./NewItemCard\";\nimport Search from \"./Seach\";\nimport ItemCard from \"./ItemCard\";\n\n\n//\nfunction App() {\n\n\n  const [data, setData] = useState([]);\n  const [title, setTitle] = useState([\"\"]);\n  const [filter, setFilter] = useState([]);\n  const [word, setWord] = useState([]);\n  const [loaded, setLoaded] = useState(\"\");\n  const baseUrl = window.$baseUrl;\n  //const baseUrl = \"http://localhost:3000\"\n  useEffect(() => {\n    var config = {\n      headers: { \"Access-Control-Allow-Origin\": \"*\" },\n    };\n\n    const fetchData = async () => {\n      const result = await axios(baseUrl + \"/mywords\", config);\n\n      setData(result.data.reverse());\n      setWord(\"\");\n    };\n\n    fetchData();\n  }, [loaded, baseUrl]);\n\n  function clear(item) {\n    var set = [...title, ...filter];\n\n    var result = set.map((element) => {\n      return item.word.toLowerCase().includes(element);\n    });\n\n    return result.some((item) => item);\n  }\n\n  return (\n    <div className=\"py-6\">\n      <Search\n        title={title}\n        filter={filter}\n        handleFilter={setFilter}\n        handleTitle={setTitle}\n      ></Search>\n      <div className=\"flex flex-wrap p-4\">\n        <div className=\"xl:w-1/4 lg:w-1/3 md:w-1/2 w-full p-4 relative\" key=\"0\">\n          <NewItemCard\n            word={word}\n            handleLoaded={setLoaded}\n            handleWord={setWord}\n          ></NewItemCard>\n        </div>\n        {data\n          .filter((item) => clear(item))\n          .map((item, index) => {\n            return (\n              <ItemCard\n                className=\"xl:w-1/4 lg:w-1/3 md:w-1/2 w-full p-4 relative\"\n                item={item}\n                key={`${item.word}${index}`}\n                setLoaded={setLoaded}\n              ></ItemCard>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nwindow.$baseUrl  = process.env.REACT_APP_BASE_URL ?? \"http://localhost:3000\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}