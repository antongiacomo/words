{"version":3,"sources":["NewItemCard.js","Seach.js","ItemCard.js","App.js","serviceWorker.js","index.js"],"names":["NewItemCard","word","handleWord","handleLoaded","baseUrl","window","$baseUrl","flipOnClick","flipDirection","className","style","height","type","placeholder","aria-label","onChange","event","target","value","toLowerCase","onClick","axios","then","response","Search","title","handleTitle","filter","handleFilter","split","onKeyPress","key","Set","map","f","data-value","e","dataset","clear","text","trim","replace","ItemCard","flippy","item","setLoaded","ref","r","delete","toggle","translations","to","from","App","useState","data","setData","setTitle","setFilter","setWord","loaded","useEffect","config","headers","a","result","reverse","fetchData","element","includes","some","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c542e1c1.chunk.js","sourcesContent":["import React from \"react\";\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\nimport axios from \"axios\";\n\nfunction NewItemCard({ word,handleWord,handleLoaded }) {\n  const baseUrl = window.$baseUrl;\n  return (\n    <Flippy flipOnClick={false} flipDirection=\"horizontal\">\n    <FrontSide\n      className=\"flex items-center justify-center border w-full h-full p-4 rounded-lg shadow uppercase text-2xl\"\n      style={{ height: \"300px\" }}\n\n    >\n      <form className=\"w-full max-w-sm\">\n        <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\n          <input\n            className=\"appearance-none bg-transparent border-none w-full text-white mr-3 py-1 px-2 leading-tight focus:outline-none\"\n            type=\"text\"\n            placeholder=\"Jane Doe\"\n            aria-label=\"Full name\"\n            onChange={(event) =>\n              handleWord(event.target.value.toLowerCase())\n            }\n            value={word}\n          />\n          <button\n            onClick={() =>\n              axios( baseUrl +\"/add/\" + word).then((response) =>\n                handleLoaded(response)\n              )\n            }\n            className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\"\n            type=\"button\"\n          >\n            Add\n          </button>\n          <button\n            className=\"flex-shrink-0 border-transparent border-4 text-teal-500 hover:text-teal-800 text-sm py-1 px-2 rounded\"\n            type=\"button\"\n            onClick={() => handleWord(\"\")}\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    </FrontSide>\n    <BackSide className=\"lg:w-1/4 md:w-1/3 sm:w-1/2 w-full p-4 relative\">\n      <p>GO BACK</p>\n    </BackSide>\n  </Flippy>\n  );\n}\nexport default NewItemCard;\n","import React from \"react\";\n\nfunction Search({title,handleTitle,filter,handleFilter}){\n  return(\n<>\n    <div className=\"w-full h-10 px-8\">\n    <input\n      placeholder=\"Search...\"\n      className=\"w-full  h-full border py-2 px-4 rounded-lg shadow bg-transparent\"\n      onChange={(event) =>\n        handleTitle(event.target.value.toLowerCase().split(\"&\"))\n      }\n      value={title}\n      onKeyPress={(event) => {\n        if (event.key === \"Enter\") {\n          handleFilter([\n            ...new Set([...filter, event.target.value.toLowerCase()]),\n          ]);\n          handleTitle([\"\"]);\n        }\n      }}\n    />\n  </div>\n  <div className=\"flex px-8 flex-wrap space-x-2\">\n    {filter.map((f) => {\n      return (\n        <span\n          key={f}\n          className=\"rounded-full py-2 px-4 my-2 bg-gray-300 hover:shadow-md hover:translate-x-1\"\n        >\n          {f}{\" \"}\n          <span\n            className=\"ml-1 border cursor-pointer\"\n            data-value={f}\n            onClick={(event) =>\n              handleFilter(\n                filter.filter((e) => e !== event.target.dataset.value)\n              )\n            }\n          >\n            ✘\n          </span>\n        </span>\n      );\n    })}\n  </div>\n</>\n  )\n}\n\nexport default Search;","import React from \"react\";\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\nimport axios from \"axios\";\n\n\nfunction clear(text){\n  return text.trim().replace(/⇒/gi, \"\");\n}\nfunction ItemCard({ item, setLoaded }) {\n  //const [flippy, setFlippy] = useState();\n  const baseUrl = window.$baseUrl;\n  let flippy;\n  return (\n    <Flippy\n      flipOnClick={false}\n      ref={(r) => (flippy = r)}\n      flipDirection=\"horizontal\"\n    >\n      <FrontSide\n        className=\"flex items-center justify-center border w-full h-full p-4 rounded-lg shadow uppercase text-2xl\"\n        style={{ height: \"300px\" }}\n      >\n        <div className=\"absolute left-0 right-0 top-0 px-4 text-right\">\n          <span\n            className=\"text-sm cursor-pointer text-red-400\"\n            onClick={() =>\n              axios\n                .delete(baseUrl + \"/remove/\" + item.word)\n                .then((response) => setLoaded(response))\n            }\n          >\n            Delete\n          </span>\n        </div>\n        <span className=\"cursor-pointer\"   onClick={() => flippy.toggle()}> {item.word}</span>\n        <div className=\"absolute bottom-0 pb-2 hover:underline\">\n          <span\n            className=\"text-teal-500 text-sm cursor-pointer\"\n            onClick={() => flippy.toggle()}\n          >\n            Reveal\n          </span>\n        </div>\n      </FrontSide>\n      <BackSide className=\"border border-teal-500 w-full h-full p-4 rounded-lg shadow\">\n        <p className=\"font-bold my-1 text-teal-300 \">\n          {item.translations[0] && item.translations[0].title}\n        </p>\n        <div className=\"flex flex-wrap space-x-2\">\n          {item.translations[0] &&\n            item.translations[0].translations.map((item) => {\n              return (\n                <>\n                  <p>{clear(item.to)}</p>\n                  <p>●</p>\n                </>\n              );\n            })}\n        </div>\n        <p className=\"font-bold my-1 mt-2 text-teal-300\">\n          {item.translations[1] && item.translations[1].title}\n        </p>\n        {item.translations[1] &&\n          item.translations[1].translations.map((item) => {\n            return (\n              <p>\n                {clear(item.from)} ⮕ {clear(item.to)}\n              </p>\n            );\n          })}\n        <div className=\"absolute left-0 bottom-0 pb-2 w-full flex justify-center\">\n          <span\n            className=\"text-teal-500 text-sm cursor-pointer uppercase text-center\"\n            onClick={() => flippy.toggle()}\n          >\n            UnReveal\n          </span>\n        </div>\n      </BackSide>\n    </Flippy>\n  );\n}\nexport default ItemCard;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./tailwind.generated.css\";\nimport NewItemCard from \"./NewItemCard\";\nimport Search from \"./Seach\";\nimport ItemCard from \"./ItemCard\";\n\n//\nfunction App() {\n  const [data, setData] = useState([]);\n  const [title, setTitle] = useState([\"\"]);\n  const [filter, setFilter] = useState([]);\n  const [word, setWord] = useState([]);\n  const [loaded, setLoaded] = useState(\"\");\n  const baseUrl = window.$baseUrl;\n  //const baseUrl = \"http://localhost:3000\"\n  useEffect(() => {\n    var config = {\n      headers: { \"Access-Control-Allow-Origin\": \"*\" },\n    };\n\n    const fetchData = async () => {\n      const result = await axios(baseUrl + \"/mywords\", config);\n\n      setData(result.data.reverse());\n      setWord(\"\");\n    };\n\n    fetchData();\n  }, [loaded, baseUrl]);\n\n  function clear(item) {\n    var set = [...title, ...filter];\n\n    var result = set.map((element) => {\n      return item.word.toLowerCase().includes(element);\n    });\n\n    return result.some((item) => item);\n  }\n\n  return (\n    <div className=\"py-6\">\n      <Search\n        title={title}\n        filter={filter}\n        handleFilter={setFilter}\n        handleTitle={setTitle}\n      ></Search>\n      <div className=\"flex flex-wrap p-4\">\n        <div className=\"lg:w-1/3 md:w-1/2 w-full p-4 relative\" key=\"0\">\n          <NewItemCard\n            word={word}\n            handleLoaded={setLoaded}\n            handleWord={setWord}\n          ></NewItemCard>\n        </div>\n        {data\n          .filter((item) => clear(item))\n          .map((item) => {\n            return (\n              <div\n                className=\"lg:w-1/3 md:w-1/2 w-full p-4 relative\"\n                key={item.word}\n              >\n                <ItemCard item={item} setLoaded={setLoaded}></ItemCard>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nwindow.$baseUrl  = 'https://wr.v2.moon-cloud.eu';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}