{"version":3,"sources":["Autocomplete.js","NewItemCard.js","logo512.png","Seach.js","ItemCard.js","App.js","serviceWorker.js","index.js"],"names":["Autocomplete","props","useState","cursor","setCursor","hasFocus","setHasFocus","hasDone","setHasDone","searchRef","useRef","suggestionRef","useRect","onChange","rect","console","log","current","style","left","top","height","width","type","autoComplete","name","placeholder","value","ref","className","onKeyPress","e","key","preventDefault","onKeyUp","persist","suggestions","length","onSelect","onFocus","onBlur","map","suggestion","i","onClick","NewItemCard","word","handleWord","handleLoaded","baseUrl","window","$baseUrl","data","setData","q","setQ","addToast","useToasts","handleQ","useEffect","a","axios","result","split","r","filter","fetchData","flipOnClick","flipDirection","backgroundColor","event","target","toLowerCase","aria-label","then","response","appearance","catch","error","alert","Search","title","handleTitle","handleFilter","src","icon","alt","Set","f","data-value","dataset","clear","text","trim","replace","ItemCard","flippy","item","setLoaded","willChange","backgroundImage","confirm","delete","xmlns","viewBox","strokeWidth","fill","strokeLinecap","strokeLinejoin","stroke","d","x1","y1","x2","y2","toggle","translations","slice","from","to","App","setTitle","setFilter","setWord","loaded","config","headers","reverse","element","includes","some","index","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","process","ReactDOM","render","StrictMode","autoDismiss","autoDismissTimeout","placement","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9edfd8f0.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Portal from \"@reach/portal\";\nimport { useRect } from \"@reach/rect\";\n\nexport default function Autocomplete(props) {\n  const [cursor, setCursor] = useState(0);\n  const [hasFocus, setHasFocus] = useState(false);\n  const [hasDone, setHasDone] = useState(false);\n  const searchRef = useRef();\n  const suggestionRef = useRef();\n\n  useRect(searchRef, {\n    onChange(rect){\n\n      console.log(hasFocus)\n      if (suggestionRef.current && rect) {\n        suggestionRef.current.style.left = rect.left + \"px\";\n        suggestionRef.current.style.top = rect.top + rect.height + \"px\";\n        suggestionRef.current.style.width = rect.width + \"px\";\n      }\n    }\n\n  });\n\n  const handleKeyPress = (e) => {\n    e.preventDefault();\n    e.persist();\n\n    setHasDone(false);\n\n    if (e.key === \"ArrowUp\" && cursor - 1 >= 0) {\n      setCursor(cursor - 1);\n    }\n\n    if (e.key === \"ArrowDown\" && cursor + 1 < props.suggestions.length) {\n      setCursor(cursor + 1);\n    }\n\n    if (e.key === \"Enter\") {\n      props.onSelect(props.suggestions[cursor]);\n      setHasFocus(false);\n      setHasDone(true);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        autoComplete=\"off\"\n        name={props.name}\n        placeholder={props.placeholder}\n        value={props.value}\n        ref={searchRef}\n        className={props.className}\n        onKeyPress={(e) => e.key === \"Enter\" && e.preventDefault()}\n        onKeyUp={handleKeyPress}\n        onChange={(e) => {\n          props.onChange(e);\n        }}\n        onFocus={() => setHasFocus(true)}\n        onBlur={() => setHasFocus(false)}\n      />\n      <Portal>\n        <div ref={suggestionRef} className=\"shadow absolute text-left z-10 text-black\">\n          { !hasDone && props.suggestions.length > 0 && (\n            <div className=\"shadow border border-white bg-white text-gray-900 absolute text-left z-10 w-full h-64 overflow-auto rounded-lg\">\n              {!hasDone &&\n                props.suggestions.length > 0 &&\n                props.suggestions.map((suggestion, i) => {\n                  return (\n                    <div\n                      key={`${suggestion}${i}`}\n                      onClick={() => {\n                        props.onSelect(suggestion);\n                        setHasFocus(false);\n                        setHasDone(true);\n                      }}\n                      className={`${\n                        cursor === i ? \"bg-teal-100\" : \"\"\n                      } p-2 cursor-pointer`}\n                    >\n                      {suggestion}\n                    </div>\n                  );\n                })}\n            </div>\n          )}\n        </div>\n      </Portal>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Flippy, { FrontSide } from \"react-flippy\";\nimport Autocomplete from \"./Autocomplete\";\nimport axios from \"axios\";\nimport { useToasts } from \"react-toast-notifications\";\nfunction NewItemCard({ word, handleWord, handleLoaded }) {\n  const baseUrl = window.$baseUrl;\n  const [data, setData] = useState([]);\n  const [q, setQ] = useState(\"\");\n  const { addToast } = useToasts();\n\n  const handleQ = (word) => {\n    setQ(word);\n    handleWord(word);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        `https://www.wordreference.com/2012/autocomplete/autocomplete.aspx?dict=iten&query=${q}`\n      );\n\n      setData(\n        result.data\n          .split(\"\\n\")\n          .map((r) => r.split(\"\\t\")[0])\n          .filter((e) => e.length > 0)\n      );\n    };\n\n    fetchData();\n  }, [q]);\n\n  return (\n    <>\n      <Flippy flipOnClick={false} flipDirection=\"horizontal\">\n        <FrontSide\n          className=\"flex items-center justify-center  w-full h-full p-4 rounded-lg shadow uppercase text-2xl\"\n\n          style={{ height: \"300px\" , backgroundColor: \"#1a202c\" }}\n        >\n          <form className=\"w-full max-w-sm\">\n            <div className=\"flex items-center  border-b-2 border-teal-500 py-2\" >\n              <input\n                className=\"hidden appearance-none bg-transparent border-none w-full text-white mr-3 py-1 px-2 leading-tight focus:outline-none\"\n                type=\"text\"\n                onChange={(event) =>\n                  handleWord(event.target.value.toLowerCase())\n                }\n                value={word}\n              />\n\n              <Autocomplete\n                aria-label=\"Word\"\n                suggestions={data}\n                value={q}\n                placeholder=\"Cerca\"\n                className=\" h-full border  appearance-none bg-transparent border-none w-full text-white mr-3 py-1 px-2 leading-tight focus:outline-none\"\n                onChange={(e) => handleQ(e.target.value)}\n                onSelect={(e) => handleQ(e)}\n              ></Autocomplete>\n\n              <button\n                onClick={() =>\n                  axios(baseUrl + \"add?word=\" + word).then((response) => {\n                    addToast(word + \" Saved Successfully\", {\n                      appearance: \"success\",\n                    });\n                    handleLoaded(response);\n                    handleQ(\"\");\n                  }).catch(error => {\n                    alert(\"woops\")\n\n                  })\n                }\n                className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-2 text-white py-1 px-2 rounded\"\n                type=\"button\"\n              >\n                Add\n              </button>\n              <button\n                className=\"flex-shrink-0 border-transparent border-4 text-teal-500 hover:text-teal-800 text-sm py-1 px-2 rounded\"\n                type=\"button\"\n                onClick={() => handleQ(\"\")}\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </FrontSide>\n      </Flippy>\n    </>\n  );\n}\nexport default NewItemCard;\n","export default __webpack_public_path__ + \"static/media/logo512.b70c8c56.png\";","import React from \"react\";\nimport icon from \"./logo512.png\";\nfunction Search({ title, handleTitle, filter, handleFilter }) {\n  return (\n    <>\n      <div className=\"flex flex-no-wrap h-10 px-8 z-50 relative\">\n        <img src={icon} className=\"h-full inline-block mr-2\" alt=\"Logo\" />\n        <input\n          placeholder=\"Filter...\"\n          className=\"w-full   h-full py-2 px-4 shadow bg-gray-900  rounded-lg\"\n          onChange={(event) =>\n            handleTitle(event.target.value.toLowerCase().split(\"&\"))\n          }\n          value={title}\n          onKeyPress={(event) => {\n            if (event.key === \"Enter\") {\n              handleFilter([\n                ...new Set([...filter, event.target.value.toLowerCase()]),\n              ]);\n              handleTitle([\"\"]);\n            }\n          }}\n        />\n        {/* <div className=\"w-32 flex justify-center items-center\">casa | casa</div> */}\n      </div>\n      <div className=\"flex px-8 flex-wrap space-x-2\">\n        {filter.map((f) => {\n          return (\n            <span\n              key={f}\n              className=\"rounded-full py-2 px-4 my-2 bg-gray-300 hover:shadow-md hover:translate-x-1\"\n            >\n              {f}{\" \"}\n              <span\n                className=\"ml-1 border cursor-pointer\"\n                data-value={f}\n                onClick={(event) =>\n                  handleFilter(\n                    filter.filter((e) => e !== event.target.dataset.value)\n                  )\n                }\n              >\n                ✘\n              </span>\n            </span>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\nimport axios from \"axios\";\n\nfunction clear(text) {\n  return text.trim().replace(/⇒/gi, \"\");\n}\nfunction ItemCard({ item, setLoaded, className }) {\n  //const [flippy, setFlippy] = useState();\n  const baseUrl = window.$baseUrl;\n  let flippy;\n  return (\n    <div className={className} >\n      <Flippy\n        flipOnClick={false}\n        ref={(r) => (flippy = r)}\n        flipDirection=\"horizontal\"\n        style={{willChange: \"transform\"}}\n      >\n        <FrontSide\n          className=\"bg-teal-500 flex items-center justify-center content-around w-full h-full p-4 rounded-lg shadow  capitalize text-3xl\nbg-gradient-to-tr from-teal-500 to-teal-800\n          \"\n          style={{ height: \"300px\", backgroundImage: \"linear-gradient(to top right, var(--tw-gradient-stops))\"}}\n        >\n          <div className=\"absolute right-0 top-0 px-4 py-2 \">\n            <span\n              className=\"text-sm cursor-pointer text-gray-200 upper\"\n              onClick={() => {\n                if (\n                  window.confirm(\"Are you sure you wish to delete this item?\")\n                )\n                  axios\n                    .delete(baseUrl + \"delete?word=\" + item.word)\n                    .then((response) => setLoaded(response));\n              }}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"icon icon-tabler icon-tabler-trash stroke-current\"\n                width=\"22\"\n                height=\"22\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth=\"2\"\n                fill=\"none\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\n                <line x1=\"4\" y1=\"7\" x2=\"20\" y2=\"7\" />\n                <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />\n                <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />\n                <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n              </svg>\n            </span>\n          </div>\n          <span\n            className=\"cursor-pointer text-gray-200\"\n            onClick={() => flippy.toggle()}\n          >\n            {\" \"}\n            {item.word}\n          </span>\n          {/* <div>\n            <span\n              className=\"text-white cursor-pointer\"\n              onClick={() => flippy.toggle()}\n            >\n\n            </span>\n          </div> */}\n        </FrontSide>\n        <BackSide\n          className=\"bg-teal-500  border border-teal-500 w-full h-full p-4 rounded-lg shadow\"\n          style={{ backgroundColor: \"#319795\" }}\n        >\n          <div className=\"h-full w-full p-2 pb-4\">\n            <div className=\"absolute left-0 top-0 px-4 py-2 \">\n              <span className=\"text-sm cursor-pointer text-gray-400 upper\">\n                <svg\n                  onClick={() => flippy.toggle()}\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\" cursor-pointer icon icon-tabler icon-tabler-arrow-back-up\"\n                  width=\"22\"\n                  height=\"22\"\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth=\"1.5\"\n                  stroke=\"#ffffff\"\n                  fill=\"none\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\n                  <path d=\"M9 13l-4 -4l4 -4m-4 4h11a4 4 0 0 1 0 8h-1\" />\n                </svg>\n              </span>\n            </div>\n            <div className=\"h-full mt-2 overflow-y-scroll\">\n              {item.translations.slice(0, 2).map((item, key) => {\n                return (\n                  <>\n                    <p className=\"font-bold my-1 mt-2 text-teal-300\">\n                      {item.translations[key] && item.title}\n                    </p>\n                    {item.translations[key] &&\n                      item.translations.map((item) => {\n                        return (\n                          <>\n                            <p key={`3${item.to}${key}`}>\n                              {clear(item.from)} ⮕ {clear(item.to)}\n                            </p>\n                          </>\n                        );\n                      })}\n                  </>\n                );\n              })}\n            </div>\n          </div>\n        </BackSide>\n      </Flippy>\n    </div>\n  );\n}\nexport default ItemCard;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./tailwind.generated.css\";\nimport NewItemCard from \"./NewItemCard\";\nimport Search from \"./Seach\";\nimport ItemCard from \"./ItemCard\";\n\n//\nfunction App() {\n  const [data, setData] = useState([]);\n  const [title, setTitle] = useState([\"\"]);\n  const [filter, setFilter] = useState([]);\n  const [word, setWord] = useState([]);\n  const [loaded, setLoaded] = useState(\"\");\n  const baseUrl = window.$baseUrl;\n  //const baseUrl = \"http://localhost:3000\"\n  useEffect(() => {\n    var config = {\n      headers: { \"Access-Control-Allow-Origin\": \"*\" },\n    };\n\n    const fetchData = async () => {\n      const result = await axios(baseUrl + \"/list\", config);\n\n      setData(result.data.reverse());\n      setWord(\"\");\n    };\n\n    fetchData();\n  }, [loaded, baseUrl]);\n\n  function clear(item) {\n    var set = [...title, ...filter];\n\n    var result = set.map((element) => {\n      return item.word.toLowerCase().includes(element);\n    });\n\n    return result.some((item) => item);\n  }\n\n  return (\n    <div className=\"py-6\">\n      <Search\n        title={title}\n        filter={filter}\n        handleFilter={setFilter}\n        handleTitle={setTitle}\n      ></Search>\n      <div className=\"grid 2xl:grid-cols-4 xl:grid-cols-3 lg:gird-cols-3 md:grid-cols-2  grid-cols-1   p-4\">\n        <div key=\"base\" className=\"w-full p-4 relative\" >\n          <NewItemCard\n            word={word}\n            handleLoaded={setLoaded}\n            handleWord={setWord}\n          ></NewItemCard>\n        </div>\n        {data\n          .filter((item) => clear(item))\n          .map((item, index) => {\n            return (\n              <ItemCard\n                key={`card${index}`}\n                className=\" w-full p-4 relative\"\n                item={item}\n\n                setLoaded={setLoaded}\n              ></ItemCard>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ToastProvider } from \"react-toast-notifications\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nwindow.$baseUrl = process.env.REACT_APP_BASE_URL ?? \"http://localhost:3000\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToastProvider\n\n      autoDismiss\n      autoDismissTimeout={2000}\n      placement=\"bottom-center\"\n    >\n      <App />\n    </ToastProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}